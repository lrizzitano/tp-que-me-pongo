@startuml

class Usuario {
    - edad: int
    - ciudad: String
    - borradores: PrendaBorrador[]
    - guardaropas: Guardaropa[]
    - motorDeSugerencias: MotorDeSugerencias
    - sugerenciaDiaria
    --
    + getPrendasDisponibles()
    + guardarBorrador(borrador, guardaropa)
    + sugerirAtuendos()
    + actualizarSugerenciaDiaria()
}

class Guardaropa {
    - nombre: String
    - prendas: Prenda[]
    --
    + agregarPrenda(prenda)
    + quitarPrenda(prenda)
}

class GuardaropaCompartido extends Guardaropa {
    - propuestasDeCambio: PropuestaDeCambio[]
    --
    + agregarPropuesta(propuesta)
}

abstract class PropuestaDeCambio {
    # prenda: Prenda
    # guardaropa: GuardaropaCompartido
    # estado: EstadoPropuesta
    --
    + aceptar()
    + deshacer()
    + rechazar()
    + {abstract} aplicarEnGuardaropa()
    + {abstract} revertirEnGuardaropa()
}

class PropuestaDeAgregado extends PropuestaDeCambio {
    --
    + aplicarEnGuardaropa()
    + revertirEnGuardaropa()
}

class PropuestaDeQuitado extends PropuestaDeCambio {
    --
    + aplicarEnGuardaropa()
    + revertirEnGuardaropa()
}

class Atuendo {
    prendas: Prenda[]
}

class Prenda {
    - tipo: TipoDePrenda
    - material: Material
    - trama: Trama
    - formalidad: Formalidad
    - colorPrincial: Color
    - colorSecuandario: Color
    --
    + Categoria()
    + esDeCategoria(Categoria categoria)
    + esDeFormalidad(Formalidad formalidad)
    + esParaTemperatura(double temperatura)
}

class PrendaBorrador {
    - tipo: TipoDePrenda
    - material: Material
    - trama: Trama
    - colorPrincial: Color
    - colorSecuandario: Color
    --
    + setTipo(Tipo)
    + setMaterial(Material)
    + setTrama(Trama)
    + setColorPrincipal(Color)
    + setColorSecundario(Color)
    + crearPrenda()
}

class TipoDePrenda {
    - descripcion: String
    - temperaturaDeUso: RangoDeTemperaturas
    --
    + esParaTemperatura(double temperatura)
}

class MotorDeSugerencias {
    - servicioMeteorologico
    --
    + sugerirAtuendos(Usuario)
    + getSugerenciaDiaria(Usuario)
}

class MotorDeSugerenciasFormales {
    + sugerirAtuendos(Usuario)
}

class UsuariosRepo {
    - usuarios
    --
    + agregar(Usuario)
    + quitar(Usuario)
    + actualizarSugerenciasDiarias()
}

class RangoDeTemperaturas {
    - temperaturaMayor: double
    - temperaturaMenor: double
    --
    + contiene(double temperatura)
}

abstract class ServicioMeteorologico {
    - cacheClimas
    - cacheAlertas
    - llamadosDiarios
    - interesadosEnAlertas
    --
    + {abstract} actualizarClima(String ciudad)
    + {abstract} actualizarAlertas(String ciudad)
    + getTemperatura(String ciudad)
    + getAlertas(String ciudad)
    + getAlertasGlobales()
    + actualizarAlertasGlobales()
}

abstract class InteresadoEnAlertas {
    - suscriptos
    --
    + suscribir(usuario)
    + desuscribir(usuario)
    + {abstract} anteAlerta(alertas)
}

class GestorDeNotificacionesPorAlertas {
    - notificationService
    --
    + anteAlerta(alertas)
    + notificar(usuario, menaje)
}

class GestorDeMailsPorAlertas {
    - mailSender
    --
    + anteAlerta(alertas)
    'suscriptores.forEach(u -> if(alertas.get(u.getCiudad()).isNotEmpty()){ this.enviar(u, alertas.get(u.getCiudad()) })
    + enviar(usuario, mail)
}

class ActualizadorDeSugerenciasDiariasPorAlertas {
    --
    + anteAlerta(alertas)
}

class ServicioMeteorologicoAccuWeather {
    - api
    --
    + actualizarClima(String ciudad)
    + actualizarAlertas(String ciudad)
}

class RespuestaDeClima {
    - limiteExpiracion
    - respuesta
    --
    + getTemperatura()
    + expiro()
}

enum Trama {
    LISA
    RAYADA
    LUNARES
    CUADROS
    ESTAMPADO
}

enum Color {
    BLANCO
    NEGRO
    GRIS
    ROJO
    NARANJA
    AMARILLO
    VERDE
    AZUL
    CELESTE
    VIOLETA
    ROSA
}

enum Categoria {
    PARTE_SUPERIOR
    CALZADO
    PARTE_INFERIOR
    ACCESORIOS
}

enum Material {
    ALGODON
    LANA
    JEAN
    CUERO
}

enum Formalidad {
    FORMAL
    NEUTRO
    INFORMAL
}

enum EstadoPropuesta {
    PENDIENTE
    ACEPTADA
    RECHAZADA
}

Atuendo -->"*" Prenda
Atuendo -[hidden]r- PrendaBorrador

UsuariosRepo -->"*" Usuario

Usuario --> PrendaBorrador
Usuario ..> Atuendo
Usuario -l-> MotorDeSugerencias
Usuario "*"-r->"*" Guardaropa

Guardaropa -->"*" Prenda

GuardaropaCompartido -->"*" PropuestaDeCambio

PropuestaDeCambio --> Prenda
PropuestaDeCambio -> EstadoPropuesta

PrendaBorrador ..> Prenda

Prenda -l-> TipoDePrenda
Prenda --> Material
Prenda --> Trama
Prenda --> Formalidad
Prenda --> Color

TipoDePrenda -[hidden]u-- MotorDeSugerenciasFormales
TipoDePrenda --> Categoria
TipoDePrenda --> RangoDeTemperaturas

MotorDeSugerencias .r.> Atuendo
MotorDeSugerencias -l-> ServicioMeteorologico

MotorDeSugerenciasFormales -u-|> MotorDeSugerencias

ServicioMeteorologico -->"*" InteresadoEnAlertas

ServicioMeteorologicoAccuWeather -u-|> ServicioMeteorologico
ServicioMeteorologicoAccuWeather -u->"*" RespuestaDeClima

RespuestaDeClima -[hidden]r- ServicioMeteorologico

ActualizadorDeSugerenciasDiariasPorAlertas .u.|> InteresadoEnAlertas
GestorDeNotificacionesPorAlertas .u.|> InteresadoEnAlertas
GestorDeMailsPorAlertas .u.|> InteresadoEnAlertas

@enduml